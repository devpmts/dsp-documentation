openapi: 3.0.1
info:
  title: File upload
  description: "Provides functionality to store one or multiple files. A malware check\
    \ will be performed before storing files. Infection details are returned, if malware\
    \ is detected."
  version: "0.2"
externalDocs:
  description: Fileupload Monitoring Dashboard
  url: https://dashboards-fileupload.dsp.vaillant-group.cloud/
servers:
- url: https://fileupload-qa.dsp.vaillant-group.com/
  description: QA - Azure Function App
  variables: {}
- url: https://fileupload.dsp.vaillant-group.com/
  description: Prod - Azure Function App
  variables: {}
security:
- code: []
- oAuth2: []
tags:
- name: File upload
paths:
  /api/files/analyse:
    post:
      tags:
      - File upload
      summary: Scan the uploaded files for malware
      operationId: analyseFile
      parameters:
      - name: code
        in: query
        description: API key
        schema:
          type: string
      requestBody:
        description: Files to be checked
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: array
                  items:
                    type: string
                    format: binary
            encoding:
              file:
                contentType: application/octet-stream
                headers:
                  Content-Disposition:
                    description: Content-Disposition header
                    required: true
                    style: simple
                    schema:
                      pattern: "^form-data; name=\"[^\"]+\"; filename=\"[^\"]+\"$"
                      type: string
                      default: form-data; name="test_input"; filename="test_input"
        required: true
      responses:
        "200":
          description: "File scan complete, no infections found"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileUploadContext'
              example:
              - filename: example.jpg
                result: NOT_INFECTED
        "400":
          description: File size limit exceeded / Empty body / Missing filename
        "422":
          description: Malware scan found infected files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileUploadContext'
              example:
              - filename: example.jpg
                result: INFECTED
                scanResult:
                  foundViruses:
                    stream:
                    - Win.Test.EICAR_HDB-1
      security:
      - code: []
  /api/health:
    get:
      tags:
      - Health
      summary: Health check endpoint
      operationId: healthCheck
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/HttpRequestMessageOptionalString'
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponseMessage'
      security:
      - code: []
  /api/files/upload:
    post:
      tags:
      - File upload
      summary: Scan the uploaded files for malware and store in Salesforce
      operationId: upload
      parameters:
      - name: code
        in: query
        description: API key
        schema:
          type: string
      - name: recordID
        in: query
        description: Record ID
        required: true
        schema:
          type: string
      requestBody:
        description: Files to be uploaded
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: array
                  items:
                    type: string
                    format: binary
            encoding:
              file:
                contentType: application/octet-stream
                headers:
                  Content-Disposition:
                    description: Content-Disposition header
                    required: true
                    style: simple
                    schema:
                      pattern: "^form-data; name=\"[^\"]+\"; filename=\"[^\"]+\"$"
                      type: string
                      default: form-data; name="test_input"; filename="test_input"
        required: true
      responses:
        "200":
          description: File upload OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileUploadContext'
              example:
              - filename: example.jpg
                result: UPLOADED
                contentVersionId: '...'
                contentDocumentId: '...'
                contentDocumentLinkId: '...'
                recordId: '...'
        "400":
          description: File size limit exceeded / Empty body / Missing filename
        "422":
          description: Malware scan found infected files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileUploadContext'
              example:
              - filename: example.jpg
                result: INFECTED
                scanResult:
                  foundViruses:
                    stream:
                    - Win.Test.EICAR_HDB-1
        "500":
          description: Upload error of at least one file
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileUploadContext'
              example:
              - filename: example.jpg
                result: UPLOAD_ERROR
      security:
      - code: []
components:
  schemas:
    FileUploadContext:
      type: object
      properties:
        filename:
          type: string
        fileSizeInBytes:
          type: integer
          format: int32
        contentType:
          type: string
        result:
          type: string
          enum:
          - UPLOADED
          - UPLOAD_ERROR
          - INFECTED
          - NOT_INFECTED
        foundViruses:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        contentVersionId:
          type: string
        contentDocumentId:
          type: string
        contentDocumentLinkId:
          type: string
        recordId:
          type: string
        salesforceResponse:
          $ref: '#/components/schemas/SalesforceResponse'
    SalesforceResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        body:
          type: string
    HttpResponseMessage:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/HttpStatusType'
        statusCode:
          type: integer
          format: int32
        body:
          type: object
    HttpStatusType:
      type: object
    HttpRequestMessageOptionalString:
      type: object
      properties:
        body:
          type: string
        uri:
          type: string
          format: uri
        queryParameters:
          type: object
          additionalProperties:
            type: string
        httpMethod:
          type: string
          enum:
          - GET
          - HEAD
          - POST
          - PUT
          - DELETE
          - CONNECT
          - OPTIONS
          - TRACE
          - PATCH
        headers:
          type: object
          additionalProperties:
            type: string
    ExecutionContext:
      type: object
      properties:
        logger:
          type: object
          properties:
            name:
              type: string
            filter:
              type: object
            resourceBundleName:
              type: string
            level:
              type: object
              properties:
                name:
                  type: string
                resourceBundleName:
                  type: string
                localizedName:
                  type: string
            handlers:
              type: array
              items:
                type: object
                properties:
                  filter:
                    type: object
                  formatter:
                    type: object
                  errorManager:
                    type: object
                  encoding:
                    type: string
                  level:
                    type: object
                    properties:
                      name:
                        type: string
                      resourceBundleName:
                        type: string
                      localizedName:
                        type: string
            useParentHandlers:
              type: boolean
            resourceBundle:
              type: object
              properties:
                locale:
                  type: object
                  properties:
                    language:
                      type: string
                    script:
                      type: string
                    variant:
                      type: string
                    country:
                      type: string
                    unicodeLocaleAttributes:
                      uniqueItems: true
                      type: array
                      items:
                        type: string
                    unicodeLocaleKeys:
                      uniqueItems: true
                      type: array
                      items:
                        type: string
                    displayLanguage:
                      type: string
                    displayScript:
                      type: string
                    displayCountry:
                      type: string
                    displayVariant:
                      type: string
                    displayName:
                      type: string
                    extensionKeys:
                      uniqueItems: true
                      type: array
                      items:
                        type: string
                    iso3Language:
                      type: string
                    iso3Country:
                      type: string
                keys:
                  type: object
                baseBundleName:
                  type: string
        functionName:
          type: string
        traceContext:
          $ref: '#/components/schemas/TraceContext'
        retryContext:
          $ref: '#/components/schemas/RetryContext'
        invocationId:
          type: string
    RetryContext:
      type: object
      properties:
        exception:
          $ref: '#/components/schemas/RpcException'
        retrycount:
          type: integer
          format: int32
        maxretrycount:
          type: integer
          format: int32
    RpcException:
      type: object
      properties:
        message:
          type: string
        source:
          type: string
        stacktrace:
          type: string
    TraceContext:
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: string
        traceparent:
          type: string
        tracestate:
          type: string
  securitySchemes:
    code:
      type: apiKey
      name: code
      in: query
    oAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://identity-qa.vaillant-group.com/auth/realms/fileupload/protocol/openid-connect/token
